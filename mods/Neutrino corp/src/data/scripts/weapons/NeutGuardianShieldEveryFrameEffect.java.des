package data.scripts.weapons;

import com.fs.starfarer.api.Global;
import com.fs.starfarer.api.combat.CombatEngineAPI;
import com.fs.starfarer.api.combat.EveryFrameWeaponEffectPlugin;
import com.fs.starfarer.api.combat.WeaponAPI;
import data.scripts.plugins.Neutrino_LocalData;
import java.awt.Color;

public class NeutGuardianShieldEveryFrameEffect implements EveryFrameWeaponEffectPlugin {

    private boolean linked = false;
    private static final String KEY = "Neutrino_LocalData";
    private final Neutrino_LocalData.LocalData localData = (Neutrino_LocalData.LocalData) Global.getCombatEngine().getCustomData().get(KEY);

    @Override
    public void advance(float amount, CombatEngineAPI engine, WeaponAPI weapon) {
        if (weapon.getShip().getOriginalOwner() == -1) {
            return;
        } else {
            if (linked) {
                weapon.getSprite().setColor(new Color(0, 0, 0, 0));
            } else {
                if (localData.guardianShieldMap.get(weapon.getShip()) != null) {
                    linked = true;
                }
            }
        }
    }
}
